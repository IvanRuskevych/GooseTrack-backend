{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "GooseTrack Swagger API",
    "description": "swagger-ui-express",
    "license": {
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "https://goosetrack-tj84.onrender.com"
    },
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    },
    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Password length must be between 8 and 16 characters"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user info",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/auth/user": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "User updateInfo",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "UserUpdate's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get all tasks",
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "required": false,
            "type": "string",
            "description": "Any date of the month for which tasks must be returned. Format: YYYY-MM-DD"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unable to fetch Tasks",
            "content": {}
          },
          "401": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create task",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Tasks's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unable to save in DataBase",
            "content": {}
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Change tasks",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Tasks's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaskReq"
                }
              }
            }
          },
          "400": {
            "description": "Unable to find Task",
            "content": {}
          },
          "401": {
            "description": "Not authorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeletePatchTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unable to find Task",
            "content": {}
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get all reviews all users",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer",
            "description": "Number page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "description": "Count reviews in response"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllReviewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unable to fetch Tasks",
            "content": {}
          }
        }
      }
    },
    "/api/reviews/": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Create review",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Tasks's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "You can only add one review"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/reviews/own": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get owner reviews",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "No reviews found for this owner",
            "content": {}
          }
        }
      }
    },
    "/api/reviews/{id}": {
      "patch": {
        "tags": [
          "Reviews"
        ],
        "summary": "Change review",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Review id"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Review's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "You don't have permission to delete this review",
            "content": {}
          },
          "404": {
            "description": "No found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Review delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Review id"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteReviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "No reviews found for this owner",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's accessToken"
          }
        },
        "example": {
          "name": "kedimi",
          "email": "kedimi2277@searpen.com",
          "birthday": "01.01.2001",
          "phone": "+380 102030405",
          "skype": "User skype nickname",
          "avatarURL": "//www.gravatar.com/avatar/ba191e990b11d8be00bd2c43d88b8ab5"
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "message",
            "format": "Verification letter was send to you email."
          }
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "format": "password",
            "minLength": 6
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ],
        "example": {
          "name": "User name",
          "email": "kedimi2277@searpen.com",
          "password": "kedimi2277"
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone"
          },
          "skype": {
            "type": "string",
            "description": "User's skype"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday"
          }
        },
        "required": [
          "name",
          "email"
        ],
        "example": {
          "name": "User name",
          "email": "user@gmail.com",
          "skype": "User skype ",
          "phone": "380 102030405",
          "birthday": "01.01.2021"
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "phone": {
              "type": "string",
              "description": "User's phone"
            },
            "skype": {
              "type": "string",
              "description": "User's skype"
            },
            "birthday": {
              "type": "string",
              "description": "User's birthday"
            }
          }
        },
        "example": {
          "message": "UserInfo updated",
          "user": {
            "skype": "User skype ",
            "birthday": "01.01.2021",
            "_id": "6479dbb972171cebb39e9dc0",
            "name": "User name",
            "email": "user@gmail.com",
            "avatarUrl": "//www.gravatar.com/avatar/2f1186e45bf2f3c8c6638ad88e55e056",
            "verify": true,
            "phone": "38 (033) 777 77 77"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Password12345$"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "example": {
          "email": "kedimi2277@searpen.com",
          "password": "kedimi2277"
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "format": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZWQyM2YxODRiYzE1ZGQwZmQ4ZTJkZSIsImlhdCI6MTY5MzI2MzgyMywiZXhwIjoxNjkzODY4NjIzfQ.eeY9oLv4mDDWYlMyxhxXYm0op2lBrolQzAHJqFZmjgw"
          },
          "refreshToken": {
            "type": "string",
            "format": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZWQyM2YxODRiYzE1ZGQwZmQ4ZTJkZSIsImlhdCI6MTY5MzI2MzgyMywiZXhwIjoxNjkzODY4NjIzfQ.eeY9oLv4mDDWYlMyxhxXYm0op2lBrolQzAHJqFZmjgw"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              }
            }
          }
        },
        "example": {
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NzliYThiYjMwOWQ4ZmJiZDA0NWRlOSIsImlhdCI6MTY4NTcwMzQyMCwiZXhwIjoxNjg1Nzg2MjIwfQ.QRWRzG0JpnCy5NjkvEi2sOnR82",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NzliYThiYjMwOWQ4ZmJiZDA0NWRlOSIsImlhdCI6MTY4NTcwMzQyMCwiZXhwIjoxNjg1Nzg2MjIwfQ.QRWRzG0JpnCy5NjkvEi2sOnR82",
          "user": {
            "email": "email@example.com"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "accessToken",
            "format": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NzliYThiYjMwOWQ4ZmJiZDA0NWRlOSIsImlhdCI6MTY4NTcwMzQyMCwiZXhwIjoxNjg1Nzg2MjIwfQ.QRWRzG0JpnCy5NjkvEi2sOnR82"
          }
        },
        "required": [
          "accessToken"
        ],
        "example": {
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NzliYThiYjMwOWQ4ZmJiZDA0NWRlOSIsImlhdCI6MTY4NTcwMzQyMCwiZXhwIjoxNjg1Nzg2MjIwfQ.QRWRzG0JpnCy5NjkvEi2sOnR82"
        }
      },
      "LogoutResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "message"
            }
          }
        },
        "example": {
          "message": "Successful logout"
        }
      },
      "GetTasksResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "",
              "example": "done"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Title task",
                    "example": "64eb8bf4ec3cfd1d22c535f6"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title task",
                    "example": "My task 1"
                  },
                  "start": {
                    "type": "string",
                    "description": "Time start task. Format HH:MM",
                    "example": "09:05"
                  },
                  "end": {
                    "type": "string",
                    "description": "Time end task. Format HH:MM. start < end",
                    "example": "09:15"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Priority task. One of the listed options: low | medium | high ",
                    "example": "medium"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date task. Format YYYY-MM-DD",
                    "example": "2023-06-09"
                  },
                  "category": {
                    "type": "string",
                    "description": "Category task. One of the listed options: to-do | in-progress | done ",
                    "example": "done"
                  },
                  "owner": {
                    "type": "string",
                    "description": "Category task. One of the listed options: to-do | in-progress | done ",
                    "example": "64eb8bf4ec3cfd1d22c59fb1"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "Category task. One of the listed options: to-do | in-progress | done ",
                    "example": "2023-08-27T17:46:28.321Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "Category task. One of the listed options: to-do | in-progress | done ",
                    "example": "2023-08-30T16:07:28.466Z"
                  }
                }
              }
            }
          }
        }
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": [
          "title",
          "date",
          "start",
          "end",
          "priority",
          "category"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title task",
            "example": "My task 1"
          },
          "start": {
            "type": "string",
            "description": "Time start task. Format HH:MM",
            "example": "09:05"
          },
          "end": {
            "type": "string",
            "description": "Time end task. Format HH:MM. start < end",
            "example": "09:15"
          },
          "priority": {
            "type": "string",
            "description": "Priority task. One of the listed options: low | medium | high ",
            "example": "medium"
          },
          "date": {
            "type": "string",
            "description": "Date task. Format YYYY-MM-DD",
            "example": "2023-06-09"
          },
          "category": {
            "type": "string",
            "description": "Category task. One of the listed options: to-do | in-progress | done ",
            "example": "in-progress"
          }
        }
      },
      "CreateTaskReq": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Code operation",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Title task",
                "example": "64eb8bf4ec3cfd1d22c535f6"
              },
              "title": {
                "type": "string",
                "description": "Title task",
                "example": "My task 1"
              },
              "start": {
                "type": "string",
                "description": "Time start task. Format HH:MM",
                "example": "09:05"
              },
              "end": {
                "type": "string",
                "description": "Time end task. Format HH:MM. start < end",
                "example": "09:15"
              },
              "priority": {
                "type": "string",
                "description": "Priority task. One of the listed options: low | medium | high ",
                "example": "medium"
              },
              "date": {
                "type": "string",
                "description": "Date task. Format YYYY-MM-DD",
                "example": "2023-06-09"
              },
              "category": {
                "type": "string",
                "description": "Category task. One of the listed options: to-do | in-progress | done ",
                "example": "in-progress"
              },
              "owner": {
                "type": "string",
                "description": "Category task. One of the listed options: to-do | in-progress | done ",
                "example": "64eb8bf4ec3cfd1d22c59fb1"
              },
              "createdAt": {
                "type": "string",
                "description": "Category task. One of the listed options: to-do | in-progress | done ",
                "example": "2023-08-27T17:46:28.321Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Category task. One of the listed options: to-do | in-progress | done ",
                "example": "2023-08-30T16:07:28.466Z"
              }
            }
          }
        }
      },
      "CreateTaskResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Code operation",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Title task",
                "example": "64eb8bf4ec3cfd1d22c535f6"
              },
              "title": {
                "type": "string",
                "description": "Title task",
                "example": "My task 1"
              },
              "start": {
                "type": "string",
                "description": "Time start task. Format HH:MM",
                "example": "09:05"
              },
              "end": {
                "type": "string",
                "description": "Time end task. Format HH:MM. start < end",
                "example": "09:15"
              },
              "priority": {
                "type": "string",
                "description": "Priority task. One of the listed options: low | medium | high ",
                "example": "medium"
              },
              "date": {
                "type": "string",
                "description": "Date task. Format YYYY-MM-DD",
                "example": "2023-06-09"
              },
              "category": {
                "type": "string",
                "description": "Category task. One of the listed options: to-do | in-progress | done ",
                "example": "in-progress"
              },
              "owner": {
                "type": "string",
                "description": "Category task. One of the listed options: to-do | in-progress | done ",
                "example": "64eb8bf4ec3cfd1d22c59fb1"
              },
              "createdAt": {
                "type": "string",
                "description": "Category task. One of the listed options: to-do | in-progress | done ",
                "example": "2023-08-27T17:46:28.321Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Category task. One of the listed options: to-do | in-progress | done ",
                "example": "2023-08-30T16:07:28.466Z"
              }
            }
          }
        }
      },
      "GetDeletePatchTaskResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Code operation",
            "example": 200
          },
          "message": {
            "type": "integer",
            "description": "Task deleted",
            "example": "Task deleted"
          }
        }
      },
      "PatchCategoryTaskRequest": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Category task. One of the listed options: to-do | in-progress | done ",
            "example": "in-progress"
          }
        }
      },
      "OwnerReview": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id owner",
            "example": "647c3368bb02a06a896ea358"
          },
          "name": {
            "type": "string",
            "description": "Name owner",
            "example": "Olja"
          },
          "avatarUrl": {
            "type": "string",
            "description": "Name owner",
            "example": "https://www.gravatar.com/avatar/316b7fc8b16defe7864b246a0fc25736"
          }
        }
      },
      "ReviewResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id review",
              "example": "64eb881c325ba234b682201b"
            },
            "text": {
              "type": "string",
              "description": "Text review",
              "example": "Text review"
            },
            "rating": {
              "type": "integer",
              "description": "Rating review, rating from 1 to 5",
              "example": 5
            },
            "owner": {
              "type": "string",
              "description": "Id of the owner",
              "example": "64eb6ed6619b36e78d062917"
            }
          }
        }
      },
      "DeleteReviewResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "integer",
            "description": "Delete success",
            "example": "Delete success"
          }
        }
      },
      "GetAllReviewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id review",
              "example": "647c3368bb02a06a896ea358"
            },
            "text": {
              "type": "string",
              "description": "Text review",
              "example": "This text of review"
            },
            "rating": {
              "type": "integer",
              "description": "Rating review, rating from 1 to 5",
              "example": 2
            },
            "owner": {
              "$ref": "#/components/schemas/OwnerReview"
            }
          }
        }
      },
      "CreateReviewRequest": {
        "type": "object",
        "required": [
          "rating",
          "comment"
        ],
        "properties": {
          "rating": {
            "type": "integer",
            "description": "Rating review, rating from 0 to 5",
            "example": 5
          },
          "text": {
            "type": "string",
            "description": "Text review",
            "example": "This text of review"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}